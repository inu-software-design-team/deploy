# HTTP 서버: HTTPS로 리디렉션
server {
    listen 80;
    server_name cozzy.duckdns.org; # 실제 도메인으로 변경

    # Let's Encrypt 인증을 위한 경로 허용
    location /.well-known/acme-challenge/ {
        root /var/www/certbot; # docker-compose.yml에서 Nginx와 Certbot에 마운트한 경로
    }

    # 나머지 HTTP 요청은 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2; # http2 사용 가능
    server_name cozzy.duckdns.org; 

    ssl_certificate /etc/letsencrypt/live/cozzy.duckdns.org/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/cozzy.duckdns.org/privkey.pem;

    # SSL 보안 강화 설정 (선택 사항, Mozilla Intermediate compatibility 권장)
    include /etc/letsencrypt/options-ssl-nginx.conf; # Certbot이 생성해주는 파일
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;   # Certbot이 생성해주는 파일 (openssl dhparam으로 직접 생성 가능)


    location / {
        proxy_pass http://frontend:3000;  # Docker Compose에서 정의한 frontend 컨테이너
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # HTTPS로 통신 중임을 백엔드에 알림
        proxy_cache_bypass $http_upgrade;
    }

    location /api {
        proxy_pass http://backend:4000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # HTTPS로 통신 중임을 백엔드에 알림
    }
}



## 추후 SSL 인증서
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;

#     # Let's Encrypt 인증을 위한 경로 허용
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     # 나머지 HTTP 요청은 HTTPS로 리다이렉트
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name yourdomain.com www.yourdomain.com;

#     ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         proxy_pass http://frontend:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /api {
#         proxy_pass http://backend:4000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }